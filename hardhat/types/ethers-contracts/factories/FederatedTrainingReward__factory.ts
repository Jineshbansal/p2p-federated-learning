/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Addressable } from "ethers";
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from "ethers"
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers"
import type { NonPayableOverrides } from "../common.js"
  import type { FederatedTrainingReward, FederatedTrainingRewardInterface } from "../FederatedTrainingReward.js";

  const _abi = [
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "uint256",
        "name": "taskId",
        "type": "uint256"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "depositor",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "string",
        "name": "modelHash",
        "type": "string"
      },
      {
        "indexed": false,
        "internalType": "string",
        "name": "datasetHash",
        "type": "string"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "numChunks",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "totalReward",
        "type": "uint256"
      }
    ],
    "name": "TaskCreated",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "uint256",
        "name": "taskId",
        "type": "uint256"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "trainer",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "string",
        "name": "weightsHash",
        "type": "string"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "rewardAmount",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "remainingChunks",
        "type": "uint256"
      }
    ],
    "name": "WeightsSubmitted",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "who",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "amount",
        "type": "uint256"
      }
    ],
    "name": "Withdrawn",
    "type": "event"
  },
  {
    "stateMutability": "payable",
    "type": "fallback"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "taskId",
        "type": "uint256"
      }
    ],
    "name": "cancelTask",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "string",
        "name": "modelHash",
        "type": "string"
      },
      {
        "internalType": "string",
        "name": "datasetHash",
        "type": "string"
      },
      {
        "internalType": "uint256",
        "name": "numChunks",
        "type": "uint256"
      }
    ],
    "name": "createTask",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "payable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      },
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "name": "hasSubmitted",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "name": "pendingWithdrawals",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "_address",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "_amount",
        "type": "uint256"
      }
    ],
    "name": "setPendingWithdrawal",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "taskId",
        "type": "uint256"
      },
      {
        "internalType": "string",
        "name": "weightsHash",
        "type": "string"
      }
    ],
    "name": "submitWeights",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "taskCount",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "name": "tasks",
    "outputs": [
      {
        "internalType": "address payable",
        "name": "depositor",
        "type": "address"
      },
      {
        "internalType": "string",
        "name": "modelHash",
        "type": "string"
      },
      {
        "internalType": "string",
        "name": "datasetHash",
        "type": "string"
      },
      {
        "internalType": "uint256",
        "name": "numChunks",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "remainingChunks",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "perChunkReward",
        "type": "uint256"
      },
      {
        "internalType": "bool",
        "name": "exists",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "withdrawPending",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "stateMutability": "payable",
    "type": "receive"
  }
] as const;

  const _bytecode = "0x6080604052348015600e575f5ffd5b50611d708061001c5f395ff3fe608060405260043610610089575f3560e01c80637eec20a8116100585780637eec20a8146101225780638d9776721461014a578063a57d38061461018c578063b6cb58a5146101c8578063f3f43703146101f25761008a565b806341a4e30a1461008c578063560fef3b146100bc578063773c2cdf146100e45780637edbceb11461010c5761008a565b5b005b6100a660048036038101906100a19190610f68565b61022e565b6040516100b39190611008565b60405180910390f35b3480156100c7575f5ffd5b506100e260048036038101906100dd919061107b565b610526565b005b3480156100ef575f5ffd5b5061010a600480360381019061010591906110b9565b61056c565b005b348015610117575f5ffd5b50610120610858565b005b34801561012d575f5ffd5b5061014860048036038101906101439190611116565b610a17565b005b348015610155575f5ffd5b50610170600480360381019061016b9190611116565b610cbb565b60405161018397969594939291906111eb565b60405180910390f35b348015610197575f5ffd5b506101b260048036038101906101ad9190611266565b610e30565b6040516101bf91906112a4565b60405180910390f35b3480156101d3575f5ffd5b506101dc610e5a565b6040516101e99190611008565b60405180910390f35b3480156101fd575f5ffd5b50610218600480360381019061021391906112bd565b610e5f565b6040516102259190611008565b60405180910390f35b5f5f8211610271576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026890611332565b60405180910390fd5b5f34116102b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102aa9061139a565b60405180910390fd5b5f82346102c091906113e5565b14610300576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f790611485565b60405180910390fd5b60015f5f82825461031191906114d0565b925050819055505f5f5490505f833461032a9190611503565b90506040518060e001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200189898080601f0160208091040260200160405190810160405280939291908181526020018383808284375f81840152601f19601f82011690508083019250505050505050815260200187878080601f0160208091040260200160405190810160405280939291908181526020018383808284375f81840152601f19601f8201169050808301925050505050505081526020018581526020018581526020018281526020016001151581525060015f8481526020019081526020015f205f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001019081610468919061175d565b50604082015181600201908161047e919061175d565b50606082015181600301556080820151816004015560a0820151816005015560c0820151816006015f6101000a81548160ff0219169083151502179055509050503373ffffffffffffffffffffffffffffffffffffffff16827f7ef2ea2bdef77ccf5258ed00c883d78e43c82ff5d0a77bfc4a9b6f4feda8d63e8a8a8a8a8a3460405161051096959493929190611866565b60405180910390a3819250505095945050505050565b8060035f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505050565b5f60015f8581526020019081526020015f209050806006015f9054906101000a900460ff166105d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c790611905565b60405180910390fd5b5f816004015411610616576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060d90611993565b60405180910390fd5b60025f8581526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16156106af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a6906119fb565b60405180910390fd5b600160025f8681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506001816004015f8282546107279190611a19565b925050819055505f816005015490505f3373ffffffffffffffffffffffffffffffffffffffff168260405161075b90611a79565b5f6040518083038185875af1925050503d805f8114610795576040519150601f19603f3d011682016040523d82523d5f602084013e61079a565b606091505b50509050806107f7578160035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546107ef91906114d0565b925050819055505b3373ffffffffffffffffffffffffffffffffffffffff16867fa079967bac96c3574eee2af6dfa44280bcb06e34a27c1d967b23032ae7067fc087878688600401546040516108489493929190611a8d565b60405180910390a3505050505050565b5f60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f81116108db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d290611b15565b60405180910390fd5b5f60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505f3373ffffffffffffffffffffffffffffffffffffffff168260405161094290611a79565b5f6040518083038185875af1925050503d805f811461097c576040519150601f19603f3d011682016040523d82523d5f602084013e610981565b606091505b50509050806109c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109bc90611b7d565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d583604051610a0b9190611008565b60405180910390a25050565b5f60015f8381526020019081526020015f209050806006015f9054906101000a900460ff16610a7b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a7290611905565b60405180910390fd5b805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b0b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0290611be5565b60405180910390fd5b8060030154816004015414610b55576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4c90611c73565b60405180910390fd5b5f81600401548260050154610b6a9190611c91565b905060015f8481526020019081526020015f205f5f82015f6101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600182015f610bb29190610e74565b600282015f610bc19190610e74565b600382015f9055600482015f9055600582015f9055600682015f6101000a81549060ff021916905550505f825f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1682604051610c3290611a79565b5f6040518083038185875af1925050503d805f8114610c6c576040519150601f19603f3d011682016040523d82523d5f602084013e610c71565b606091505b5050905080610cb5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cac90611d1c565b60405180910390fd5b50505050565b6001602052805f5260405f205f91509050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001018054610cff9061158d565b80601f0160208091040260200160405190810160405280929190818152602001828054610d2b9061158d565b8015610d765780601f10610d4d57610100808354040283529160200191610d76565b820191905f5260205f20905b815481529060010190602001808311610d5957829003601f168201915b505050505090806002018054610d8b9061158d565b80601f0160208091040260200160405190810160405280929190818152602001828054610db79061158d565b8015610e025780601f10610dd957610100808354040283529160200191610e02565b820191905f5260205f20905b815481529060010190602001808311610de557829003601f168201915b505050505090806003015490806004015490806005015490806006015f9054906101000a900460ff16905087565b6002602052815f5260405f20602052805f5260405f205f915091509054906101000a900460ff1681565b5f5481565b6003602052805f5260405f205f915090505481565b508054610e809061158d565b5f825580601f10610e915750610eae565b601f0160209004905f5260205f2090810190610ead9190610eb1565b5b50565b5b80821115610ec8575f815f905550600101610eb2565b5090565b5f5ffd5b5f5ffd5b5f5ffd5b5f5ffd5b5f5ffd5b5f5f83601f840112610ef557610ef4610ed4565b5b8235905067ffffffffffffffff811115610f1257610f11610ed8565b5b602083019150836001820283011115610f2e57610f2d610edc565b5b9250929050565b5f819050919050565b610f4781610f35565b8114610f51575f5ffd5b50565b5f81359050610f6281610f3e565b92915050565b5f5f5f5f5f60608688031215610f8157610f80610ecc565b5b5f86013567ffffffffffffffff811115610f9e57610f9d610ed0565b5b610faa88828901610ee0565b9550955050602086013567ffffffffffffffff811115610fcd57610fcc610ed0565b5b610fd988828901610ee0565b93509350506040610fec88828901610f54565b9150509295509295909350565b61100281610f35565b82525050565b5f60208201905061101b5f830184610ff9565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61104a82611021565b9050919050565b61105a81611040565b8114611064575f5ffd5b50565b5f8135905061107581611051565b92915050565b5f5f6040838503121561109157611090610ecc565b5b5f61109e85828601611067565b92505060206110af85828601610f54565b9150509250929050565b5f5f5f604084860312156110d0576110cf610ecc565b5b5f6110dd86828701610f54565b935050602084013567ffffffffffffffff8111156110fe576110fd610ed0565b5b61110a86828701610ee0565b92509250509250925092565b5f6020828403121561112b5761112a610ecc565b5b5f61113884828501610f54565b91505092915050565b5f61114b82611021565b9050919050565b61115b81611141565b82525050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6111a382611161565b6111ad818561116b565b93506111bd81856020860161117b565b6111c681611189565b840191505092915050565b5f8115159050919050565b6111e5816111d1565b82525050565b5f60e0820190506111fe5f83018a611152565b81810360208301526112108189611199565b905081810360408301526112248188611199565b90506112336060830187610ff9565b6112406080830186610ff9565b61124d60a0830185610ff9565b61125a60c08301846111dc565b98975050505050505050565b5f5f6040838503121561127c5761127b610ecc565b5b5f61128985828601610f54565b925050602061129a85828601611067565b9150509250929050565b5f6020820190506112b75f8301846111dc565b92915050565b5f602082840312156112d2576112d1610ecc565b5b5f6112df84828501611067565b91505092915050565b7f6e756d4368756e6b73206d757374206265203e203000000000000000000000005f82015250565b5f61131c60158361116b565b9150611327826112e8565b602082019050919050565b5f6020820190508181035f83015261134981611310565b9050919050565b7f6465706f736974207265717569726564000000000000000000000000000000005f82015250565b5f61138460108361116b565b915061138f82611350565b602082019050919050565b5f6020820190508181035f8301526113b181611378565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6113ef82610f35565b91506113fa83610f35565b92508261140a576114096113b8565b5b828206905092915050565b7f6465706f736974206d75737420626520646976697369626c65206279206e756d5f8201527f4368756e6b730000000000000000000000000000000000000000000000000000602082015250565b5f61146f60268361116b565b915061147a82611415565b604082019050919050565b5f6020820190508181035f83015261149c81611463565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6114da82610f35565b91506114e583610f35565b92508282019050808211156114fd576114fc6114a3565b5b92915050565b5f61150d82610f35565b915061151883610f35565b925082611528576115276113b8565b5b828204905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806115a457607f821691505b6020821081036115b7576115b6611560565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026116197fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826115de565b61162386836115de565b95508019841693508086168417925050509392505050565b5f819050919050565b5f61165e61165961165484610f35565b61163b565b610f35565b9050919050565b5f819050919050565b61167783611644565b61168b61168382611665565b8484546115ea565b825550505050565b5f5f905090565b6116a2611693565b6116ad81848461166e565b505050565b5b818110156116d0576116c55f8261169a565b6001810190506116b3565b5050565b601f821115611715576116e6816115bd565b6116ef846115cf565b810160208510156116fe578190505b61171261170a856115cf565b8301826116b2565b50505b505050565b5f82821c905092915050565b5f6117355f198460080261171a565b1980831691505092915050565b5f61174d8383611726565b9150826002028217905092915050565b61176682611161565b67ffffffffffffffff81111561177f5761177e611533565b5b611789825461158d565b6117948282856116d4565b5f60209050601f8311600181146117c5575f84156117b3578287015190505b6117bd8582611742565b865550611824565b601f1984166117d3866115bd565b5f5b828110156117fa578489015182556001820191506020850194506020810190506117d5565b868310156118175784890151611813601f891682611726565b8355505b6001600288020188555050505b505050505050565b828183375f83830152505050565b5f611845838561116b565b935061185283858461182c565b61185b83611189565b840190509392505050565b5f6080820190508181035f83015261187f81888a61183a565b9050818103602083015261189481868861183a565b90506118a36040830185610ff9565b6118b06060830184610ff9565b979650505050505050565b7f7461736b20646f6573206e6f74206578697374000000000000000000000000005f82015250565b5f6118ef60138361116b565b91506118fa826118bb565b602082019050919050565b5f6020820190508181035f83015261191c816118e3565b9050919050565b7f6e6f20726577617264732072656d61696e696e6720666f7220746869732074615f8201527f736b000000000000000000000000000000000000000000000000000000000000602082015250565b5f61197d60228361116b565b915061198882611923565b604082019050919050565b5f6020820190508181035f8301526119aa81611971565b9050919050565b7f616c7265616479207375626d697474656420666f722074686973207461736b005f82015250565b5f6119e5601f8361116b565b91506119f0826119b1565b602082019050919050565b5f6020820190508181035f830152611a12816119d9565b9050919050565b5f611a2382610f35565b9150611a2e83610f35565b9250828203905081811115611a4657611a456114a3565b5b92915050565b5f81905092915050565b50565b5f611a645f83611a4c565b9150611a6f82611a56565b5f82019050919050565b5f611a8382611a59565b9150819050919050565b5f6060820190508181035f830152611aa681868861183a565b9050611ab56020830185610ff9565b611ac26040830184610ff9565b95945050505050565b7f6e6f2070656e64696e672062616c616e636500000000000000000000000000005f82015250565b5f611aff60128361116b565b9150611b0a82611acb565b602082019050919050565b5f6020820190508181035f830152611b2c81611af3565b9050919050565b7f7769746864726177207472616e73666572206661696c656400000000000000005f82015250565b5f611b6760188361116b565b9150611b7282611b33565b602082019050919050565b5f6020820190508181035f830152611b9481611b5b565b9050919050565b7f6f6e6c79206465706f7369746f722063616e2063616e63656c000000000000005f82015250565b5f611bcf60198361116b565b9150611bda82611b9b565b602082019050919050565b5f6020820190508181035f830152611bfc81611bc3565b9050919050565b7f63616e6e6f742063616e63656c206166746572207375626d697373696f6e73205f8201527f7374617274656400000000000000000000000000000000000000000000000000602082015250565b5f611c5d60278361116b565b9150611c6882611c03565b604082019050919050565b5f6020820190508181035f830152611c8a81611c51565b9050919050565b5f611c9b82610f35565b9150611ca683610f35565b9250828202611cb481610f35565b91508282048414831517611ccb57611cca6114a3565b5b5092915050565b7f726566756e64207472616e73666572206661696c6564000000000000000000005f82015250565b5f611d0660168361116b565b9150611d1182611cd2565b602082019050919050565b5f6020820190508181035f830152611d3381611cfa565b905091905056fea264697066735822122044470f91bab87868c29aee4aa1bd3628d18ba310b1db1b6a982c0b9977bbdd4364736f6c634300081c0033";

  
      type FederatedTrainingRewardConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

      const isSuperArgs = (xs: FederatedTrainingRewardConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
        xs.length > 1
    

  export class FederatedTrainingReward__factory extends ContractFactory {
    
      constructor(...args: FederatedTrainingRewardConstructorParams) {
        if (isSuperArgs(args)) {
          super(...args);
        } else {
          super(_abi, _bytecode, args[0]);
        }
        
      }
    
    override getDeployTransaction(overrides?: NonPayableOverrides & { from?: string }): Promise<ContractDeployTransaction> {
      return super.getDeployTransaction(overrides || {});
    };
    override deploy(overrides?: NonPayableOverrides & { from?: string }) {
      return super.deploy(overrides || {}) as Promise<FederatedTrainingReward & {
        deploymentTransaction(): ContractTransactionResponse;
      }>;
    }
    override connect(runner: ContractRunner | null): FederatedTrainingReward__factory {
      return super.connect(runner) as FederatedTrainingReward__factory;
    }
    
    
    static readonly bytecode = _bytecode;
    static readonly abi = _abi;
    static createInterface(): FederatedTrainingRewardInterface {
      return new Interface(_abi) as FederatedTrainingRewardInterface;
    }
    
    override attach(address: string | Addressable): FederatedTrainingReward {
      return super.attach(address) as FederatedTrainingReward;
    }
  static connect(address: string, runner?: ContractRunner | null): FederatedTrainingReward {
      return new Contract(address, _abi, runner) as unknown as FederatedTrainingReward;
    }
  }

  
  